import{_ as y}from"./chunks/ArticleMetadata.e115931a.js";import{_ as i,C as A,o as a,c as o,H as d,w as C,k as s,a as e,Q as t,b as m,e as D}from"./chunks/framework.09228d5a.js";import"./chunks/md5.3e7612d8.js";const Z=JSON.parse('{"title":"无监督学习与聚类之 K-means 算法","description":"","frontmatter":{"title":"无监督学习与聚类之 K-means 算法","date":"2022-05-19T15:02:41.000Z","categories":["note"],"tags":["无监督学习，聚类"],"copyright":true},"headers":[],"relativePath":"categories/notes/2022/05/19/K-means_algorithm_for_unsupervised_learning_and_clustering.md","filePath":"categories/notes/2022/05/19/K-means_algorithm_for_unsupervised_learning_and_clustering.md","lastUpdated":1707057975000}'),u={name:"categories/notes/2022/05/19/K-means_algorithm_for_unsupervised_learning_and_clustering.md"},F=s("h1",{id:"无监督学习与聚类之-k-means-算法",tabindex:"-1"},[e("无监督学习与聚类之 K-means 算法 "),s("a",{class:"header-anchor",href:"#无监督学习与聚类之-k-means-算法","aria-label":'Permalink to "无监督学习与聚类之 K-means 算法"'},"​")],-1),b=s("h3",{id:"k-means-原理说明",tabindex:"-1"},[e("K-means 原理说明 "),s("a",{class:"header-anchor",href:"#k-means-原理说明","aria-label":'Permalink to "K-means 原理说明"'},"​")],-1),B=s("p",null,"通常，人们根据样本间的某种距离或者相似性来定义聚类，即把相似的（或距离近的）样本聚为同一类，而把不相似的（或距离远的）样本归在其他类。",-1),E=s("p",null,"k-means 算法是一种很常见的聚类算法，它的基本思想是：通过迭代寻找 k 个聚类的一种划分方案，使得用这 k 个聚类的均值来代表相应各类样本时所得的总体误差最小。",-1),T=s("p",null,"k-means 算法的基础是最小误差平方和准则。其代价函数是：",-1),h={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},Q={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.819ex"},xmlns:"http://www.w3.org/2000/svg",width:"26.399ex",height:"6.757ex",role:"img",focusable:"false",viewBox:"0 -1740.7 11668.3 2986.6","aria-hidden":"true"},_=t('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43D" d="M447 625Q447 637 354 637H329Q323 642 323 645T325 664Q329 677 335 683H352Q393 681 498 681Q541 681 568 681T605 682T619 682Q633 682 633 672Q633 670 630 658Q626 642 623 640T604 637Q552 637 545 623Q541 610 483 376Q420 128 419 127Q397 64 333 21T195 -22Q137 -22 97 8T57 88Q57 130 80 152T132 174Q177 174 182 130Q182 98 164 80T123 56Q115 54 115 53T122 44Q148 15 197 15Q235 15 271 47T324 130Q328 142 387 380T447 625Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(633,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1022,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1455,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1899.7,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2502.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3169.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="munderover" transform="translate(4225.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(537.8,1150) scale(0.707)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(5835.9,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6113.9,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(6391.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(605,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(8063.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(9063.4,0)"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(636,-225.8) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(466,289) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(734,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g></g></g><g data-mml-node="mo" transform="translate(10675.8,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(10953.8,0)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(311,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g></g></g>',1),g=[_],v=s("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("mi",null,"J"),s("mo",{stretchy:"false"},"("),s("mi",null,"c"),s("mo",null,","),s("mi",null,"μ"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("munderover",null,[s("mo",{"data-mjx-texclass":"OP",movablelimits:"false"},"∑"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("mi",null,"k")]),s("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),s("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),s("msup",null,[s("mi",null,"x"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"−"),s("msub",null,[s("mi",null,"μ"),s("mrow",{"data-mjx-texclass":"ORD"},[s("msup",null,[s("mi",null,"c"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])])])]),s("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),s("msup",null,[s("mo",{"data-mjx-texclass":"ORD",stretchy:"false"},"|"),s("mn",null,"2")])])],-1),f=t(`<p>上式中，\\mu_{c^(i)}表示第 i 个聚类的均值。我们希望代价函数最小，直观的来说，各类内的样本越相似，其与该类均值间的误差平方越小，对所有类所得到的误差平方求和，即可验证分为 k 类时，各聚类是否是最优的。上式的代价函数无法用解析的方法最小化，只能有迭代的方法。</p><h3 id="伪代码" tabindex="-1">伪代码 <a class="header-anchor" href="#伪代码" aria-label="Permalink to &quot;伪代码&quot;">​</a></h3><ul><li><p>在样本中选取 k 个点作为初始的质心点（随机选择）</p></li><li><p>当任意一个点的簇分配结果发生改变时</p></li><li><p>对数据集中的每一个数据点</p></li></ul><p>对每一个质心，计算质心与数据点的距离</p><p>将数据点分配到距离最近的簇</p><ul><li><p>对每一个簇，计算簇中所有点的均值，并将均值作为质心</p></li><li><p>判断当前聚类中心与先前的聚类中心点是否一直，若一致，则结束聚类，不一致，重新聚类，如此循环往复</p></li></ul><h3 id="代码实现" tabindex="-1">代码实现 <a class="header-anchor" href="#代码实现" aria-label="Permalink to &quot;代码实现&quot;">​</a></h3><ul><li><p>数据生成部分</p><p>这里有两种实现方式，一种基于 Matlab 的 mvnrnd 函数，一种基于 Python 的 numpy 包中的 random.normal 方法生成生成具有特定偏移量和相关性且服从高斯分布的随机数。</p></li></ul><p><strong>data_create.m</strong>（基于 Matlab）</p><div class="language-matlab vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">% mvnrnd函数可以用于生成不同类别模式的数据，数据要服从正态分布（高斯分布）。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">% matlab实现代码如下：</span></span>
<span class="line"><span style="color:#768390;">% 均值向量、协方差矩阵</span></span>
<span class="line"><span style="color:#ADBAC7;">mul = [-</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;"> ,-</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">SIGMA = [</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">;0,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">data1 = mvnrnd(mul,SIGMA,</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">plot(data1(:,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">),data1(:,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">),</span><span style="color:#96D0FF;">&#39;r+&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">hold</span><span style="color:#96D0FF;"> on;</span></span>
<span class="line"><span style="color:#768390;">% 均值向量、协方差矩阵</span></span>
<span class="line"><span style="color:#ADBAC7;">mul = [</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">SIGMA = [</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">; </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">];</span></span>
<span class="line"><span style="color:#ADBAC7;">data2 = mvnrnd(mul,SIGMA,</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">plot(data2(:,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">),data2(:,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">),</span><span style="color:#96D0FF;">&#39;b*&#39;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">data = [data1;data2];</span></span>
<span class="line"><span style="color:#ADBAC7;">data = double(data);</span></span>
<span class="line"><span style="color:#768390;">% 导出数据集</span></span>
<span class="line"><span style="color:#768390;">%dlmwrite(&#39;./dataset/data_create.txt&#39;,data,&#39; &#39;);           % 以txt文件保存</span></span>
<span class="line"><span style="color:#768390;">%csvwrite(&#39;./dataset/data_create.csv&#39;,data);           % 以csv文件保存</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;">% 推荐调用mat_save2txt函数的文件保存为txt,不会出现需要字符转换的问题</span></span>
<span class="line"><span style="color:#ADBAC7;">mat_save2txt(</span><span style="color:#96D0FF;">&#39;./dataset/data_create.txt&#39;</span><span style="color:#ADBAC7;">,data);    </span><span style="color:#768390;">% 这里使用相对路径</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">% mvnrnd函数可以用于生成不同类别模式的数据，数据要服从正态分布（高斯分布）。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">% matlab实现代码如下：</span></span>
<span class="line"><span style="color:#6A737D;">% 均值向量、协方差矩阵</span></span>
<span class="line"><span style="color:#24292E;">mul = [-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> ,-</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">SIGMA = [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;0,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">data1 = mvnrnd(mul,SIGMA,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">plot(data1(:,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">),data1(:,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#032F62;">&#39;r+&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">hold</span><span style="color:#032F62;"> on;</span></span>
<span class="line"><span style="color:#6A737D;">% 均值向量、协方差矩阵</span></span>
<span class="line"><span style="color:#24292E;">mul = [</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">SIGMA = [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">data2 = mvnrnd(mul,SIGMA,</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">plot(data2(:,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">),data2(:,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#032F62;">&#39;b*&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">data = [data1;data2];</span></span>
<span class="line"><span style="color:#24292E;">data = double(data);</span></span>
<span class="line"><span style="color:#6A737D;">% 导出数据集</span></span>
<span class="line"><span style="color:#6A737D;">%dlmwrite(&#39;./dataset/data_create.txt&#39;,data,&#39; &#39;);           % 以txt文件保存</span></span>
<span class="line"><span style="color:#6A737D;">%csvwrite(&#39;./dataset/data_create.csv&#39;,data);           % 以csv文件保存</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">% 推荐调用mat_save2txt函数的文件保存为txt,不会出现需要字符转换的问题</span></span>
<span class="line"><span style="color:#24292E;">mat_save2txt(</span><span style="color:#032F62;">&#39;./dataset/data_create.txt&#39;</span><span style="color:#24292E;">,data);    </span><span style="color:#6A737D;">% 这里使用相对路径</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p><strong>mat_save2txt.m</strong></p><div class="language-matlab vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">matlab</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">% Reference ;https://www.cnblogs.com/tsingke/p/13344020.html</span></span>
<span class="line"><span style="color:#F47067;">function</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">result</span><span style="color:#ADBAC7;"> = </span><span style="color:#DCBDFB;">mat_save2txt</span><span style="color:#ADBAC7;">(</span><span style="color:#F69D50;">savepath</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">mat</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">result=fopen(savepath,</span><span style="color:#96D0FF;">&#39;wt&#39;</span><span style="color:#ADBAC7;">); </span><span style="color:#768390;">%写入的文件，各函数后面有说明</span></span>
<span class="line"><span style="color:#ADBAC7;">[m,n]=size(mat);</span></span>
<span class="line"><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:m</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> j=</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:n</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> j==n</span></span>
<span class="line"><span style="color:#ADBAC7;">         fprintf(result,</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%g\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">,mat(i,j));</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#F47067;">else</span></span>
<span class="line"><span style="color:#ADBAC7;">        fprintf(result,</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%g\\t</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">,mat(i,j));</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#F47067;">end</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">end</span></span>
<span class="line"><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">end</span></span>
<span class="line"><span style="color:#ADBAC7;">fclose(result);</span></span>
<span class="line"><span style="color:#F47067;">end</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">% Reference ;https://www.cnblogs.com/tsingke/p/13344020.html</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#E36209;">result</span><span style="color:#24292E;"> = </span><span style="color:#6F42C1;">mat_save2txt</span><span style="color:#24292E;">(</span><span style="color:#E36209;">savepath</span><span style="color:#24292E;">,</span><span style="color:#E36209;">mat</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">result=fopen(savepath,</span><span style="color:#032F62;">&#39;wt&#39;</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">%写入的文件，各函数后面有说明</span></span>
<span class="line"><span style="color:#24292E;">[m,n]=size(mat);</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:m</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> j=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:n</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> j==n</span></span>
<span class="line"><span style="color:#24292E;">         fprintf(result,</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%g\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">,mat(i,j));</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">        fprintf(result,</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%g\\t</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">,mat(i,j));</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#D73A49;">end</span></span>
<span class="line"><span style="color:#24292E;">fclose(result);</span></span>
<span class="line"><span style="color:#D73A49;">end</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>data_creata.py</strong>（基于 Python3）</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 生成一个有标准偏移 axis 的服从高斯分布的随机数</span></span>
<span class="line"><span style="color:#768390;"># size=(100,2)</span></span>
<span class="line"><span style="color:#768390;"># axis = 偏移量</span></span>
<span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">normal_random</span><span style="color:#ADBAC7;">(size,axis):</span></span>
<span class="line"><span style="color:#ADBAC7;">    data </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.random.normal(</span><span style="color:#F69D50;">size</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> axis</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># print(data)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">data </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> normal_random((</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">),</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)     </span><span style="color:#768390;">#测试用例</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 数据保存至浮点数小数点后 3 位</span></span>
<span class="line"><span style="color:#ADBAC7;">np.savetxt(</span><span style="color:#96D0FF;">&#39;./dataset/dataset_py.txt&#39;</span><span style="color:#ADBAC7;">,data,</span><span style="color:#F69D50;">fmt</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%0.3f</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;Data has saved!&quot;</span><span style="color:#ADBAC7;">)</span><span style="color:#96D0FF;">&quot;)例</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 生成一个有标准偏移 axis 的服从高斯分布的随机数</span></span>
<span class="line"><span style="color:#6A737D;"># size=(100,2)</span></span>
<span class="line"><span style="color:#6A737D;"># axis = 偏移量</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">normal_random</span><span style="color:#24292E;">(size,axis):</span></span>
<span class="line"><span style="color:#24292E;">    data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.random.normal(</span><span style="color:#E36209;">size</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> axis</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># print(data)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> normal_random((</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)     </span><span style="color:#6A737D;">#测试用例</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 数据保存至浮点数小数点后 3 位</span></span>
<span class="line"><span style="color:#24292E;">np.savetxt(</span><span style="color:#032F62;">&#39;./dataset/dataset_py.txt&#39;</span><span style="color:#24292E;">,data,</span><span style="color:#E36209;">fmt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%0.3f</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Data has saved!&quot;</span><span style="color:#24292E;">)</span><span style="color:#032F62;">&quot;)例</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><strong>Lx_distance.py</strong></p><p>定义了 L1、L2 范数的计算方式，可以直接调用</p><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">from</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># L1、L2 范数</span></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Lx_distance</span><span style="color:#ADBAC7;">(vector1,vector2,x):</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 计算 L1 范数，曼哈顿距离</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">sum</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">abs</span><span style="color:#ADBAC7;">(vector2</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">vector1))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 计算 L2 范数（欧式距离）</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">elif</span><span style="color:#ADBAC7;"> x </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> sqrt(</span><span style="color:#6CB6FF;">sum</span><span style="color:#ADBAC7;">(power(vector2</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">vector1,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;The x of you input is illegal!,please contact to me!&quot;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># L1、L2 范数</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Lx_distance</span><span style="color:#24292E;">(vector1,vector2,x):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 计算 L1 范数，曼哈顿距离</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">abs</span><span style="color:#24292E;">(vector2</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">vector1))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 计算 L2 范数（欧式距离）</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sqrt(</span><span style="color:#005CC5;">sum</span><span style="color:#24292E;">(power(vector2</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">vector1,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;The x of you input is illegal!,please contact to me!&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>K-means.py</strong></p><ul><li>读取 txt 数据</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 读取 txt</span></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">read_txt</span><span style="color:#ADBAC7;">(path):</span></span>
<span class="line"><span style="color:#ADBAC7;">    dataSet </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> []</span></span>
<span class="line"><span style="color:#ADBAC7;">    fileIn </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">open</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;.\\dataset\\data_create.txt&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> line </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> fileIn.readlines():</span></span>
<span class="line"><span style="color:#ADBAC7;">        lineArr </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> line.strip().strip(</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">\\n</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">).split(</span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">\\t</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        dataSet.append([</span><span style="color:#6CB6FF;">float</span><span style="color:#ADBAC7;">(lineArr[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]), </span><span style="color:#6CB6FF;">float</span><span style="color:#ADBAC7;">(lineArr[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">])])</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;load data...&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> dataSet</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 读取 txt</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">read_txt</span><span style="color:#24292E;">(path):</span></span>
<span class="line"><span style="color:#24292E;">    dataSet </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">    fileIn </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">open</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;.\\dataset\\data_create.txt&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> line </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> fileIn.readlines():</span></span>
<span class="line"><span style="color:#24292E;">        lineArr </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> line.strip().strip(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">).split(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        dataSet.append([</span><span style="color:#005CC5;">float</span><span style="color:#24292E;">(lineArr[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]), </span><span style="color:#005CC5;">float</span><span style="color:#24292E;">(lineArr[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])])</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;load data...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> dataSet</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>随机选取聚类中心</li></ul><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 随机从所有样本中选取 k 个聚类中心点，这些中心点与样本点数据维度要保持一致</span></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">random_center_point</span><span style="color:#ADBAC7;">(dataset,k):</span></span>
<span class="line"><span style="color:#ADBAC7;">    num,dim </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dataset.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">    centroid </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> zeros((k,dim))</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k):</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># 生成随机整数</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># index = int(random.random(0,num))</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># index = randint(0,num)</span></span>
<span class="line"><span style="color:#ADBAC7;">        index </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">int</span><span style="color:#ADBAC7;">(uniform(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">, num))</span></span>
<span class="line"><span style="color:#ADBAC7;">        centroid[i, :] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dataset[index, :]</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;load data...&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> centroid</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 随机从所有样本中选取 k 个聚类中心点，这些中心点与样本点数据维度要保持一致</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">random_center_point</span><span style="color:#24292E;">(dataset,k):</span></span>
<span class="line"><span style="color:#24292E;">    num,dim </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset.shape</span></span>
<span class="line"><span style="color:#24292E;">    centroid </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> zeros((k,dim))</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 生成随机整数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># index = int(random.random(0,num))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># index = randint(0,num)</span></span>
<span class="line"><span style="color:#24292E;">        index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(uniform(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, num))</span></span>
<span class="line"><span style="color:#24292E;">        centroid[i, :] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset[index, :]</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;load data...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> centroid</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>K-means 算法</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># K-means 算法</span></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">k_means</span><span style="color:#ADBAC7;">(dataset,k):</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 创建一个矩阵用于存储样本点的所属类别和 L2 范数</span></span>
<span class="line"><span style="color:#ADBAC7;">    num </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dataset.shape[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">    dim </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dataset.shape[</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">    update_num </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">       </span><span style="color:#768390;"># 迭代次数</span></span>
<span class="line"><span style="color:#ADBAC7;">    cluster </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mat(zeros((num,dim)))</span></span>
<span class="line"><span style="color:#ADBAC7;">    cluster_stage </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 随机选取样本中心点</span></span>
<span class="line"><span style="color:#ADBAC7;">    centroids </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> random_center_point(dataset,k)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;cluster is starting...&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 计算所有样本与中心点的 L2 范数</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(num):</span></span>
<span class="line"><span style="color:#ADBAC7;">        min_dis </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">10000.0</span></span>
<span class="line"><span style="color:#ADBAC7;">        min_index </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">0</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> j </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k):</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#768390;">#distance =  Lx_distance(centroids[j,:],dataset[i,:],1)      # L1 范数</span></span>
<span class="line"><span style="color:#ADBAC7;">            distance </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">  Lx_distance(centroids[j,:],dataset[i,:],</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)      </span><span style="color:#768390;"># L2 范数</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> distance </span><span style="color:#F47067;">&lt;</span><span style="color:#ADBAC7;"> min_dis:</span></span>
<span class="line"><span style="color:#ADBAC7;">                min_dis </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> distance</span></span>
<span class="line"><span style="color:#ADBAC7;">                min_index </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> j</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># 更新存储矩阵</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> cluster[i,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> min_index:</span></span>
<span class="line"><span style="color:#ADBAC7;">            cluster_stage </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">True</span></span>
<span class="line"><span style="color:#ADBAC7;">            cluster[i,:] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> min_index,min_dis</span><span style="color:#F47067;">**</span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#ADBAC7;">    update_num </span><span style="color:#F47067;">+=</span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 更新所有的类内中心点</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> j </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k):</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># np.nonzero()[0] 取出二维数组中的值不为零的第一维元素的下标</span></span>
<span class="line"><span style="color:#ADBAC7;">        dataset_cluster </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dataset[nonzero(cluster[:,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">].A </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> j)[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]]</span></span>
<span class="line"><span style="color:#ADBAC7;">        centroids[j,:] </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mean(dataset_cluster,</span><span style="color:#F69D50;">axis</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">None</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        update_num </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&#39;cluster complete!&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 返回聚类中心、聚类结果、迭代次数</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> centroids,cluster,update_num</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># K-means 算法</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">k_means</span><span style="color:#24292E;">(dataset,k):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 创建一个矩阵用于存储样本点的所属类别和 L2 范数</span></span>
<span class="line"><span style="color:#24292E;">    num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset.shape[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    dim </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset.shape[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    update_num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">       </span><span style="color:#6A737D;"># 迭代次数</span></span>
<span class="line"><span style="color:#24292E;">    cluster </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mat(zeros((num,dim)))</span></span>
<span class="line"><span style="color:#24292E;">    cluster_stage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 随机选取样本中心点</span></span>
<span class="line"><span style="color:#24292E;">    centroids </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> random_center_point(dataset,k)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cluster is starting...&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 计算所有样本与中心点的 L2 范数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(num):</span></span>
<span class="line"><span style="color:#24292E;">        min_dis </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10000.0</span></span>
<span class="line"><span style="color:#24292E;">        min_index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">#distance =  Lx_distance(centroids[j,:],dataset[i,:],1)      # L1 范数</span></span>
<span class="line"><span style="color:#24292E;">            distance </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">  Lx_distance(centroids[j,:],dataset[i,:],</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)      </span><span style="color:#6A737D;"># L2 范数</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> distance </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> min_dis:</span></span>
<span class="line"><span style="color:#24292E;">                min_dis </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> distance</span></span>
<span class="line"><span style="color:#24292E;">                min_index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> j</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 更新存储矩阵</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> cluster[i,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> min_index:</span></span>
<span class="line"><span style="color:#24292E;">            cluster_stage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"><span style="color:#24292E;">            cluster[i,:] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> min_index,min_dis</span><span style="color:#D73A49;">**</span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">    update_num </span><span style="color:#D73A49;">+=</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 更新所有的类内中心点</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># np.nonzero()[0] 取出二维数组中的值不为零的第一维元素的下标</span></span>
<span class="line"><span style="color:#24292E;">        dataset_cluster </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset[nonzero(cluster[:,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">].A </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> j)[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]]</span></span>
<span class="line"><span style="color:#24292E;">        centroids[j,:] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mean(dataset_cluster,</span><span style="color:#E36209;">axis</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        update_num </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;cluster complete!&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 返回聚类中心、聚类结果、迭代次数</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> centroids,cluster,update_num</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><ul><li>绘制聚类结果</li></ul><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 绘制聚类结果</span></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">show2d_cluster</span><span style="color:#ADBAC7;">(dataset,k,centroid_updated,cluster,correct_rate):</span></span>
<span class="line"><span style="color:#ADBAC7;">    num,dim </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> dataset.shape</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> dim </span><span style="color:#F47067;">!=</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;Sorry!,The dimension of your dataset is not 2! Please check it!&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">-</span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;start plot!&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        mark1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;or&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;ob&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;og&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;ok&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;^r&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;+r&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;sr&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;dr&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;&lt;r&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;pr&#39;</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(num):</span></span>
<span class="line"><span style="color:#ADBAC7;">            index </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">int</span><span style="color:#ADBAC7;">(cluster[i,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">])</span></span>
<span class="line"><span style="color:#ADBAC7;">            plt.plot(dataset[i,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">],dataset[i,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">],mark1[index])</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># plot the centroid_updated</span></span>
<span class="line"><span style="color:#ADBAC7;">        mark2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> [</span><span style="color:#96D0FF;">&#39;Dr&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Db&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Dg&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;Dk&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;^b&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;+b&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;sb&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;db&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;&lt;b&#39;</span><span style="color:#ADBAC7;">, </span><span style="color:#96D0FF;">&#39;pb&#39;</span><span style="color:#ADBAC7;">] </span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k):</span></span>
<span class="line"><span style="color:#ADBAC7;">            plt.plot(centroid_updated[i,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">],centroid_updated[i,</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], mark2[i</span><span style="color:#F47067;">+</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">], </span><span style="color:#F69D50;">markersize</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">11</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;"># 绘图标题，x,y 轴标签</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.title(</span><span style="color:#96D0FF;">&quot;The result of cluster &quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#F69D50;">fontsize</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">20</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.xlabel(</span><span style="color:#96D0FF;">&quot;x_position&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.ylabel(</span><span style="color:#96D0FF;">&quot;y_position&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">        plt.show()</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 绘制聚类结果</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">show2d_cluster</span><span style="color:#24292E;">(dataset,k,centroid_updated,cluster,correct_rate):</span></span>
<span class="line"><span style="color:#24292E;">    num,dim </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> dataset.shape</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> dim </span><span style="color:#D73A49;">!=</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sorry!,The dimension of your dataset is not 2! Please check it!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;start plot!&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        mark1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;or&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ob&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;og&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;ok&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;^r&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;+r&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;sr&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;dr&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&lt;r&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;pr&#39;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(num):</span></span>
<span class="line"><span style="color:#24292E;">            index </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">int</span><span style="color:#24292E;">(cluster[i,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">            plt.plot(dataset[i,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],dataset[i,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">],mark1[index])</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># plot the centroid_updated</span></span>
<span class="line"><span style="color:#24292E;">        mark2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&#39;Dr&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Db&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Dg&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;Dk&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;^b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;+b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;sb&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;db&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&lt;b&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;pb&#39;</span><span style="color:#24292E;">] </span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k):</span></span>
<span class="line"><span style="color:#24292E;">            plt.plot(centroid_updated[i,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">],centroid_updated[i,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], mark2[i</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#E36209;">markersize</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 绘图标题，x,y 轴标签</span></span>
<span class="line"><span style="color:#24292E;">        plt.title(</span><span style="color:#032F62;">&quot;The result of cluster &quot;</span><span style="color:#24292E;">,</span><span style="color:#E36209;">fontsize</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.xlabel(</span><span style="color:#032F62;">&quot;x_position&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.ylabel(</span><span style="color:#032F62;">&quot;y_position&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        plt.show()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>计算正确率</li></ul><p>思路：通常情况下对于聚类方法（非监督学习），我们是无法知道其正确率的，但是我们使用已知规律的数据来测试 K-means 方法的性能，所以这是是可以计算出正确率的，K-means 的聚类效果好的先决条件是样本数据各类别数量分布均衡，类内具有良好的积聚性，类间具有较强的差异性。</p><p>根据生成的样本数据可知，两类样本数量对等，均为 100，故只需要对聚类结果的分类标签进行数量统计，在选择一类与已知类别数量 N_{n}做差，即可求出聚类错误的样本个数 N_{error}，再用下式即可求出正确率 C_{正确}。</p><p>C_{正确} = (1-\\frac{N_{error}}{N_{n}})\\times100%</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># K-means 计算正确率专用</span></span>
<span class="line"><span style="color:#768390;"># dataset_num 为预先生成数据的各样本个数，为相同值</span></span>
<span class="line"><span style="color:#768390;"># cluster 为 K-means 聚类后的分类结果</span></span>
<span class="line"><span style="color:#768390;"># k 为预先计算样本</span></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">compute_correct_rate</span><span style="color:#ADBAC7;">(dataset_num,cluster,k):</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 为各聚类结果的样本个数初始化为 0</span></span>
<span class="line"><span style="color:#ADBAC7;">    num </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> cluster.shape[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">]</span></span>
<span class="line"><span style="color:#ADBAC7;">    cluster_num </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> zeros(k)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 默认各类样本个数一致</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> i </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(num):</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">for</span><span style="color:#ADBAC7;"> j </span><span style="color:#F47067;">in</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">range</span><span style="color:#ADBAC7;">(k): </span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> cluster[i,</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">] </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> j:</span></span>
<span class="line"><span style="color:#ADBAC7;">                cluster_num[j] </span><span style="color:#F47067;">+=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#ADBAC7;">    correct_rate </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">abs</span><span style="color:#ADBAC7;">(dataset_num</span><span style="color:#F47067;">-</span><span style="color:#ADBAC7;">cluster_num[</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">])</span><span style="color:#F47067;">/</span><span style="color:#ADBAC7;">dataset_num)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> correct_rate</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># K-means 计算正确率专用</span></span>
<span class="line"><span style="color:#6A737D;"># dataset_num 为预先生成数据的各样本个数，为相同值</span></span>
<span class="line"><span style="color:#6A737D;"># cluster 为 K-means 聚类后的分类结果</span></span>
<span class="line"><span style="color:#6A737D;"># k 为预先计算样本</span></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">compute_correct_rate</span><span style="color:#24292E;">(dataset_num,cluster,k):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 为各聚类结果的样本个数初始化为 0</span></span>
<span class="line"><span style="color:#24292E;">    num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cluster.shape[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">    cluster_num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> zeros(k)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 默认各类样本个数一致</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(num):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(k): </span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> cluster[i,</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> j:</span></span>
<span class="line"><span style="color:#24292E;">                cluster_num[j] </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    correct_rate </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">abs</span><span style="color:#24292E;">(dataset_num</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">cluster_num[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">])</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">dataset_num)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> correct_rate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>主程序（测试）</li></ul><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">__name__</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;__main__&quot;</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    path </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;K-means\\dataset\\data_create.txt&#39;</span></span>
<span class="line"><span style="color:#ADBAC7;">    dataset </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">mat(read_txt(path))</span></span>
<span class="line"><span style="color:#ADBAC7;">    k </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span></span>
<span class="line"><span style="color:#ADBAC7;">    centroid_updated,cluster,update_num </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> k_means(dataset,k)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 调用 Numpy 保存 array 数据</span></span>
<span class="line"><span style="color:#ADBAC7;">    savetxt(</span><span style="color:#96D0FF;">&#39;centroid_updated.txt&#39;</span><span style="color:#ADBAC7;">,centroid_updated,</span><span style="color:#F69D50;">fmt</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%d</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    savetxt(</span><span style="color:#96D0FF;">&#39;cluster.txt&#39;</span><span style="color:#ADBAC7;">,cluster,</span><span style="color:#F69D50;">fmt</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%d</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">     </span><span style="color:#768390;"># 显示正确率</span></span>
<span class="line"><span style="color:#ADBAC7;">    correct_rate </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> compute_correct_rate(</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,cluster,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;本次聚类迭代：&quot;</span><span style="color:#ADBAC7;">,update_num,</span><span style="color:#96D0FF;">&#39;次&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;本次聚类正确率 correct_rate:&quot;</span><span style="color:#ADBAC7;">,correct_rate</span><span style="color:#F47067;">*</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&#39;%&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># print(&quot;本次聚类用时:&quot;,time)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 聚类结果可视化</span></span>
<span class="line"><span style="color:#ADBAC7;">    show2d_cluster(dataset,k,centroid_updated,cluster,correct_rate)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;K-means\\dataset\\data_create.txt&#39;</span></span>
<span class="line"><span style="color:#24292E;">    dataset </span><span style="color:#D73A49;">=</span><span style="color:#24292E;">mat(read_txt(path))</span></span>
<span class="line"><span style="color:#24292E;">    k </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">    centroid_updated,cluster,update_num </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> k_means(dataset,k)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 调用 Numpy 保存 array 数据</span></span>
<span class="line"><span style="color:#24292E;">    savetxt(</span><span style="color:#032F62;">&#39;centroid_updated.txt&#39;</span><span style="color:#24292E;">,centroid_updated,</span><span style="color:#E36209;">fmt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    savetxt(</span><span style="color:#032F62;">&#39;cluster.txt&#39;</span><span style="color:#24292E;">,cluster,</span><span style="color:#E36209;">fmt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%d</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6A737D;"># 显示正确率</span></span>
<span class="line"><span style="color:#24292E;">    correct_rate </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> compute_correct_rate(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,cluster,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;本次聚类迭代：&quot;</span><span style="color:#24292E;">,update_num,</span><span style="color:#032F62;">&#39;次&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;本次聚类正确率 correct_rate:&quot;</span><span style="color:#24292E;">,correct_rate</span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&#39;%&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># print(&quot;本次聚类用时:&quot;,time)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 聚类结果可视化</span></span>
<span class="line"><span style="color:#24292E;">    show2d_cluster(dataset,k,centroid_updated,cluster,correct_rate)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="结果分析" tabindex="-1">结果分析 <a class="header-anchor" href="#结果分析" aria-label="Permalink to &quot;结果分析&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F69D50;">&quot;e:\\桌面\\新课程实验\\pattern recognition and Maching Learning\\Experiment\\K-means\\k-means.py&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;</span></span>
<span class="line"><span style="color:#96D0FF;">load data...</span></span>
<span class="line"><span style="color:#96D0FF;">load data...</span></span>
<span class="line"><span style="color:#96D0FF;">cluster is starting...</span></span>
<span class="line"><span style="color:#96D0FF;">cluster complete!</span></span>
<span class="line"><span style="color:#96D0FF;">本次聚类迭代: 3 次</span></span>
<span class="line"><span style="color:#96D0FF;">本次聚类正确率correct_rate: 99.0 %</span></span>
<span class="line"><span style="color:#96D0FF;">start plot!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">&quot;e:\\桌面\\新课程实验\\pattern recognition and Maching Learning\\Experiment\\K-means\\k-means.py&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">load data...</span></span>
<span class="line"><span style="color:#032F62;">load data...</span></span>
<span class="line"><span style="color:#032F62;">cluster is starting...</span></span>
<span class="line"><span style="color:#032F62;">cluster complete!</span></span>
<span class="line"><span style="color:#032F62;">本次聚类迭代: 3 次</span></span>
<span class="line"><span style="color:#032F62;">本次聚类正确率correct_rate: 99.0 %</span></span>
<span class="line"><span style="color:#032F62;">start plot!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>可以看到本次聚类迭代了 3 次即完成了聚类，聚类结果正确率高达 99%</p><p><img src="https://cn-sy1.rains3.com/dfdfgf/blog/K-means_algorithm_for_unsupervised_learning_and_clustering/202205191509097.png" alt=""></p><p>从图上来看，聚类中心位于类别的中心，本次聚类还是比较成功的。</p><h3 id="附加测试" tabindex="-1">附加测试 <a class="header-anchor" href="#附加测试" aria-label="Permalink to &quot;附加测试&quot;">​</a></h3><ul><li>测试样本生成</li></ul><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">import</span><span style="color:#ADBAC7;"> numpy </span><span style="color:#F47067;">as</span><span style="color:#ADBAC7;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F47067;">def</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">normal_random</span><span style="color:#ADBAC7;">(size,axis):</span></span>
<span class="line"><span style="color:#ADBAC7;">    data </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.random.normal(</span><span style="color:#F69D50;">size</span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">)) </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> axis</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># print(data)</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">data </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> normal_random((</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">),</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)     </span><span style="color:#768390;">#测试用例 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">data1 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> normal_random((</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">),</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">)     </span><span style="color:#768390;">#测试用例 2</span></span>
<span class="line"><span style="color:#ADBAC7;">data2 </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> normal_random((</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">),</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">)     </span><span style="color:#768390;">#测试用例 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># hstack((a,b)) 在行上合并</span></span>
<span class="line"><span style="color:#768390;"># vstack((a,b)) 在列上合并</span></span>
<span class="line"><span style="color:#ADBAC7;">a </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> np.vstack((data1,data2))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#768390;"># 数据保存至浮点数小数点后 3 位</span></span>
<span class="line"><span style="color:#ADBAC7;">np.savetxt(</span><span style="color:#96D0FF;">&#39;./dataset/dataset_py.txt&#39;</span><span style="color:#ADBAC7;">,data,</span><span style="color:#F69D50;">fmt</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%0.3f</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">np.savetxt(</span><span style="color:#96D0FF;">&#39;./dataset/dataset_py_test.txt&#39;</span><span style="color:#ADBAC7;">,a,</span><span style="color:#F69D50;">fmt</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;</span><span style="color:#F47067;">%0.3f</span><span style="color:#96D0FF;">&#39;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#6CB6FF;">print</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;Data has saved!&quot;</span><span style="color:#ADBAC7;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> numpy </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">normal_random</span><span style="color:#24292E;">(size,axis):</span></span>
<span class="line"><span style="color:#24292E;">    data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.random.normal(</span><span style="color:#E36209;">size</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> axis</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># print(data)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> normal_random((</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)     </span><span style="color:#6A737D;">#测试用例 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">data1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> normal_random((</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)     </span><span style="color:#6A737D;">#测试用例 2</span></span>
<span class="line"><span style="color:#24292E;">data2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> normal_random((</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)     </span><span style="color:#6A737D;">#测试用例 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># hstack((a,b)) 在行上合并</span></span>
<span class="line"><span style="color:#6A737D;"># vstack((a,b)) 在列上合并</span></span>
<span class="line"><span style="color:#24292E;">a </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> np.vstack((data1,data2))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 数据保存至浮点数小数点后 3 位</span></span>
<span class="line"><span style="color:#24292E;">np.savetxt(</span><span style="color:#032F62;">&#39;./dataset/dataset_py.txt&#39;</span><span style="color:#24292E;">,data,</span><span style="color:#E36209;">fmt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%0.3f</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">np.savetxt(</span><span style="color:#032F62;">&#39;./dataset/dataset_py_test.txt&#39;</span><span style="color:#24292E;">,a,</span><span style="color:#E36209;">fmt</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">%0.3f</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Data has saved!&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><ul><li>测试程序</li></ul><div class="language-py vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">if</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">__name__</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">==</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;__main__&quot;</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># path = &#39;K-means\\dataset\\data_create.txt&#39;        # 生成样本数据 1</span></span>
<span class="line"><span style="color:#ADBAC7;">    path </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&#39;K-means\\dataset\\dataset_py_test.txt&#39;</span><span style="color:#ADBAC7;">    </span><span style="color:#768390;"># 测试样本数据 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__name__</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;__main__&quot;</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># path = &#39;K-means\\dataset\\data_create.txt&#39;        # 生成样本数据 1</span></span>
<span class="line"><span style="color:#24292E;">    path </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;K-means\\dataset\\dataset_py_test.txt&#39;</span><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 测试样本数据 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>修改为测试样本数据录取路径</p><ul><li>测试结果</li></ul><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F69D50;">&quot;e:\\桌面\\新课程实验\\pattern recognition and Maching Learning\\Experiment\\K-means\\k-means.py&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;</span></span>
<span class="line"><span style="color:#96D0FF;">.......</span></span>
<span class="line"><span style="color:#96D0FF;">本次聚类迭代: 3 次</span></span>
<span class="line"><span style="color:#96D0FF;">本次聚类正确率correct_rate: 58.00000000000001 %</span></span>
<span class="line"><span style="color:#96D0FF;">start plot!</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">&quot;e:\\桌面\\新课程实验\\pattern recognition and Maching Learning\\Experiment\\K-means\\k-means.py&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">.......</span></span>
<span class="line"><span style="color:#032F62;">本次聚类迭代: 3 次</span></span>
<span class="line"><span style="color:#032F62;">本次聚类正确率correct_rate: 58.00000000000001 %</span></span>
<span class="line"><span style="color:#032F62;">start plot!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>可以看到本次聚类迭代了 3 次也完成了聚类，但聚类结果正确率相较之前，正确率明显下降，只有 58%</p><p><img src="https://cn-sy1.rains3.com/dfdfgf/blog/K-means_algorithm_for_unsupervised_learning_and_clustering/202205191509687.png" alt=""></p><p>从图上可以看到聚类结果有明显的聚类错误，主要原因是，测试样本中的类间距离较近，导致无法准确聚类</p><h3 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h3><p>K-means 算法的取得良好的聚类效果的先决条件是样本数据各类别数量分布均衡，类内具有良好的积聚性，类间具有较强的差异性。所以在选取聚类算法时，需要根据数据的实际分布情况来选择合适的方法，做到对症下药，一针见血。</p>`,51);function k(n,x,q,w,H,L){const r=y,c=A("ClientOnly");return a(),o("div",null,[F,d(c,null,{default:C(()=>{var l,p;return[(((l=n.$frontmatter)==null?void 0:l.aside)??!0)&&(((p=n.$frontmatter)==null?void 0:p.showArticleMetadata)??!0)?(a(),m(r,{key:0,article:n.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),b,B,E,T,s("mjx-container",h,[(a(),o("svg",Q,g)),v]),f])}const V=i(u,[["render",k]]);export{Z as __pageData,V as default};
